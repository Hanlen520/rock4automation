======================
Rock4 WebTest模型及API
======================

*********************
1 WebTest Actions API
*********************
    * 全局参数
    
        +--------+---------------+-------------------------------------------+
        | 参数名 |       描述    |                   值或类型                |
        +========+===============+===========================================+
        | by     | 指定的寻找类型|css/id/name/class/tagname/xpath/link/plink |
        +--------+---------------+-------------------------------------------+
        | value  | 寻找类型的值  |   字符串                                  |
        +--------+---------------+-------------------------------------------+
        | index  | 索引,默认0    |   数字                                    |
        +--------+---------------+-------------------------------------------+
        | timeout| 超时,默认10秒 |   数字                                    |
        +--------+---------------+-------------------------------------------+
    
    * 浏览器操作(Actions API)
        
        +---------------------+--------------------+----------+-----------------------------+
        |    Actions API      |  参数              |   返回值 |      描述                   |
        +=====================+====================+==========+=============================+
        |AlertAccept          |                    |          |警告框-点击确认              |
        +---------------------+--------------------+----------+-----------------------------+
        |AlertDismiss         |                    |          |警告框-点击取消              |
        +---------------------+--------------------+----------+-----------------------------+
        |AlertSendKeys        |                    |          |警告框-输入文字              |
        +---------------------+--------------------+----------+-----------------------------+
        |AlertTextHave        |text                |True/False|判断警告框是否包含文本       |
        +---------------------+--------------------+----------+-----------------------------+
        |Back                 |                    |          |后退                         |
        +---------------------+--------------------+----------+-----------------------------+
        |Forward              |                    |          |前进                         |
        +---------------------+--------------------+----------+-----------------------------+
        |Js                   |script              |          |执行js脚本                   |
        +---------------------+--------------------+----------+-----------------------------+
        |Maximize             |                    |          |浏览器最大化                 |
        +---------------------+--------------------+----------+-----------------------------+
        |NavigateTo           |url                 |          |导航到指定url                |
        +---------------------+--------------------+----------+-----------------------------+
        |Refresh              |                    |          |刷新页面                     |
        +---------------------+--------------------+----------+-----------------------------+
        |ScreenShoot          |fpath               |          |截图到fpath指定的文件        |
        +---------------------+--------------------+----------+-----------------------------+
        |ScrollTo             |x,y                 |          |滚动;左上("0","0")           |
        |                     |                    |          |右下("10000","10000")        |
        +---------------------+--------------------+----------+-----------------------------+
        |SwitchToDefaultFrame |                    |          |切换到默认iframe             |
        +---------------------+--------------------+----------+-----------------------------+
        |SwitchToDefaultWindow|                    |          |切换到默认窗口               |
        +---------------------+--------------------+----------+-----------------------------+
        |SwitchToFrame        |framename           |          |切换到指定的iframe           |
        +---------------------+--------------------+----------+-----------------------------+
        |SwitchToNewPopWindow |                    |          |切换到新的标签窗口           |
        +---------------------+--------------------+----------+-----------------------------+
        |WebClose             |                    |          |关闭退出浏览器               |
        +---------------------+--------------------+----------+-----------------------------+
        |Init                 |name,dp,            |          |(模型不适用)初始化浏览器,name|
        |                     |marionette=False    |          |为firefox或chrome;dp设置下载 |
        |                     |                    |          |路径;marionette默认False     |
        +---------------------+--------------------+----------+-----------------------------+
        |Title                |                    |字符串    |(模型不适用)获取页面标题     |
        +---------------------+--------------------+----------+-----------------------------+
        |URL                  |                    |字符串    |(模型不适用)获取页面URL      |
        +---------------------+--------------------+----------+-----------------------------+
        |SetWindowSize        |width,height        |          |(模型不适用)设置浏览器大小   |
        +---------------------+--------------------+----------+-----------------------------+
        |SwitchToAlert        |                    |          |(模型不适用)切换到警告窗     |
        +---------------------+--------------------+----------+-----------------------------+
        |IESkipCertError      |                    |          |(模型不适用)Skip IE SSL错误  |
        +---------------------+--------------------+----------+-----------------------------+
        
    * 页面UI操作(Actions API)
        带有【元素】标记的，要配合全局参数使用
        
        +---------------------+--------------------+----------+-----------------------------+
        |    Actions API      |  参数              |   返回值 |      描述                   |
        +=====================+====================+==========+=============================+
        |Click                |                    |          |点击【元素】                 |
        +---------------------+--------------------+----------+-----------------------------+
        |ClickText            |text                |          |遍历点击指定text的【元素】   |
        +---------------------+--------------------+----------+-----------------------------+
        |ClickAndHold         |                    |          |按住【元素】                 |
        +---------------------+--------------------+----------+-----------------------------+
        |DoubleClick          |                    |          |双击 【元素】                |
        +---------------------+--------------------+----------+-----------------------------+
        |DoubleClickText      |text                |          |遍历双击指定text 【元素】    |
        +---------------------+--------------------+----------+-----------------------------+
        |EnhancedClick        |text                |          |加强点击,避免点击失效【元素】|
        +---------------------+--------------------+----------+-----------------------------+
        |GetFocus             |                    |          |获取并设置焦点至元素 【元素】|
        +---------------------+--------------------+----------+-----------------------------+
        |IsEnabled            |                    |True/False|是否启用 【元素】            |
        +---------------------+--------------------+----------+-----------------------------+
        |IsExist              |                    |True/False|是否存在 【元素】            |
        +---------------------+--------------------+----------+-----------------------------+
        |IsVisible            |                    |True/False|是否可见  【元素】           |
        +---------------------+--------------------+----------+-----------------------------+
        |IsText               |                    |True/False|是否有文本【元素】           |
        +---------------------+--------------------+----------+-----------------------------+        
        |MouseOver            |                    |          |鼠标悬浮至元素 【元素】      |
        +---------------------+--------------------+----------+-----------------------------+
        |MoveAndDropTo        |                    |          |拖拽至 【元素】              |
        |                     |                    |          |一般是:先按住,再拖,在释放    |
        +---------------------+--------------------+----------+-----------------------------+
        |ReleaseClick         |                    |          |释放元素【元素】             |
        +---------------------+--------------------+----------+-----------------------------+
        |RightClick           |                    |          |右键点击 【元素】            |
        +---------------------+--------------------+----------+-----------------------------+
        |RightClickText       |text                |          |右键点击text【元素】         |
        +---------------------+--------------------+----------+-----------------------------+
        |SetVar               |name,value          |          |设置变量                     |
        +---------------------+--------------------+----------+-----------------------------+
        |TimeSleep            |seconds             |          |睡眠                         |
        +---------------------+--------------------+----------+-----------------------------+
        |TypeIn               |text                |          |输入文本text 【元素】        |
        +---------------------+--------------------+----------+-----------------------------+
        |Upload               |abs_file            |          |点击元素【元素】             |
        |                     |                    |          |在上传对话框完成上传动作     |
        +---------------------+--------------------+----------+-----------------------------+
        |UploadType           |abs_file            |          |页面原生上传标签中【元素】   |
        |                     |                    |          |指定abs_file的上传文件       |
        +---------------------+--------------------+----------+-----------------------------+
        |Wait                 |                    |True/False|依据超时时间，               |
        |                     |                    |          |等待元素存在【元素】         |
        +---------------------+--------------------+----------+-----------------------------+
        |WaitForAppearing     |                    |True/False|依据超时时间，               |
        |                     |                    |          |等待元素出现【元素】         |
        +---------------------+--------------------+----------+-----------------------------+
        |WaitForDisappearing  |                    |True/False|依据超时时间,                |
        |                     |                    |          |等待元素消失【元素】         |
        +---------------------+--------------------+----------+-----------------------------+
        |WaitForVisible       |                    |True/False|依据超时时间，               |
        |                     |                    |          |等待元素可见【元素】         |
        +---------------------+--------------------+----------+-----------------------------+
        |Alt                  |key                 |          |发送Alt+key 组合键至【元素】 |
        +---------------------+--------------------+----------+-----------------------------+
        |Ctrl                 |key                 |          |发送Ctrl+key 组合键至【元素】|
        +---------------------+--------------------+----------+-----------------------------+
        |Backspace            |                    |          |发送Backspace 【元素】       |
        +---------------------+--------------------+----------+-----------------------------+
        |Enter                |                    |          |发送Enter键   【元素】       |
        +---------------------+--------------------+----------+-----------------------------+
        |Escape               |                    |          |发送Escape键  【元素】       |
        +---------------------+--------------------+----------+-----------------------------+
        |Space                |                    |          |发送Space键  【元素】        |
        +---------------------+--------------------+----------+-----------------------------+
        |Tab                  |                    |          |发送Tab键 【元素】           |
        +---------------------+--------------------+----------+-----------------------------+
        |GetAttribute         |attr                |String    |(模型不适用)获取标签属性的值 |
        +---------------------+--------------------+----------+-----------------------------+
        |GetInnerHTML         |                    |String    |(模型不适用)获取InnerHTML值  |
        +---------------------+--------------------+----------+-----------------------------+
        |GetObjectsCount      |                    |String    |(模型不适用)获取已找到的     |
        |                     |                    |          |元素数量值                   |
        +---------------------+--------------------+----------+-----------------------------+
        |GetPageHTML          |                    |String    |(模型不适用)获取页面源码     |
        +---------------------+--------------------+----------+-----------------------------+
        |GetText              |                    |String    |(模型不适用)获取元素文本     |
        +---------------------+--------------------+----------+-----------------------------+
        |GetVar               |name                |String    |(模型不适用)获取参数的值     |
        +---------------------+--------------------+----------+-----------------------------+
        |Select               |value               |          |(局限)选择value的元素        |
        +---------------------+--------------------+----------+-----------------------------+
        |SelectByOrder        |order               |          |(局限)依据索引order顺序      |
        |                     |                    |          |选择元素                     |
        +---------------------+--------------------+----------+-----------------------------+
        |Set                  |value               |          |(局限)输入value              |
        |                     |                    |          |或者选择value的元素          |
        +---------------------+--------------------+----------+-----------------------------+

    * 示例
    
        * 浏览器操作::
        
            from rock4.softtest.web.actions import WebBrowser
            print "open firefox"
            WebBrowser.Init("firefox",r"d:\auto\buffer")
            print "navigate to www.baidu.com"    
            WebBrowser.NavigateTo("http://www.baidu.com")
            print "refresh www.baidu.com"    
            WebBrowser.Refresh()
            WebBrowser.WebClose()
            
        * 页面UI操作::
            
            import time
            from rock4.softtest.web.actions import WebBrowser,WebElement
            WebBrowser.Init("firefox",r"d:\auto\buffer")
            print "navigate to knitterDemo"
            WebBrowser.NavigateTo("http://sleepycat.org/static/knitter/KnitterDemo.html")
            WebElement.by, WebElement.value = "ID", "title"
            print "select box-test"
            WebElement.Select("Mrs.")
            time.sleep(0.5)
            WebElement.Set("Mr.")
            time.sleep(0.5)
            WebElement.SelectByOrder(3)
            time.sleep(0.5)
            
            WebElement.by, WebElement.value = "CSS_SELECTOR", "#name"
            print "text box-test"
            WebElement.TypeIn("Hello world! 1")
            time.sleep(0.5)
            WebElement.Set("Hello world! 2")
            time.sleep(0.5)
            WebElement.TypeIn("Hello world! 3")
            WebElement.GetFocus()
            WebElement.TypeIn("Hello world! 4")
            time.sleep(0.5)
            print "close firefox"
            WebBrowser.WebClose()
        
    
**************
2 WebTest 模型
**************
    

#. yaml实例,源码::
    
    from rock4 import target,shoot,WebTest,Grid

    target("web_excel_usage", proj_path = r'D:\auto\env\testProject', initdirs = False)

    def case_detail(devdriver):
        shoot(devdriver = devdriver,modelfile = r'D:\auto\env\testProject\testcase\web_yaml_usage.yaml',modeltype="web")

    def local_web_test():
        # defaultly will grab the remote host and connect them. if no remote host, local webdriver will be started
        return WebTest(hub_ip="127.0.0.1", hub_port=4444)
        
    def remote_web_test():
        # using block=False to start hub and node without block on the same PC 
        Grid().start_hub(block=False)
        Grid().start_node(5555, hub_ip="127.0.0.1", hub_port=4444, block=False)
        return WebTest(hub_ip="127.0.0.1", hub_port=4444, browsers = ["firefox","chrome"])
        
    def remote_web_test2():
        # defaultly will grab the remote host and connect them.
        return WebTest(hub_ip="127.0.0.1", hub_port=4444, browsers = ["firefox","chrome"])

    if __name__ == "__main__":
        test = local_web_test()
    #     test = remote_web_test()
    #     test = remote_web_test2()
        
        if test.is_server_running:
            test.run_model_case(case_detail)
        
#. excel实例,源码::
    
    
    from rock4.common import p_common
    from rock4.softtest.common.ModelEntrance import test_start
    from rock4.softtest.web.TestDriver import TestDriver,SelRemote

    p_common.init_project_env("web_excel_usage", proj_path = r'D:\auto\env\testProject', initdirs = False)

    def case_detail(devdriver):
        test_start(devdriver = devdriver,modelfile = r'D:\auto\env\testProject\testcase\web_excel_usage.xlsx',modeltype="web")


    def local_web_test():
        # defaultly will grab the remote host and connect them. if no remote host, local webdriver will be started
        return TestDriver(hub_ip="127.0.0.1", hub_port=4444)
        
    def remote_web_test():
        # using block=False to start hub and node without block on the same PC 
        SelRemote().start_hub(block=False)
        SelRemote().start_node(5555, hub_ip="127.0.0.1", hub_port=4444, block=False)
        return TestDriver(hub_ip="127.0.0.1", hub_port=4444, browsers = ["firefox","chrome"])
        
    def remote_web_test2():
        # defaultly will grab the remote host and connect them.
        return TestDriver(hub_ip="127.0.0.1", hub_port=4444, browsers = ["firefox","chrome"])

    if __name__ == "__main__":
        test = local_web_test()
    #     test = remote_web_test()
    #     test = remote_web_test2()
        
        if test.is_server_running:
            test.run_model_case(case_detail)
    
